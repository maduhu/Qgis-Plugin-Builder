# -*- coding: utf-8 -*-
"""
/***************************************************************************
 $TemplateClass
                                 A QGIS plugin
 $TemplateDescription
                              -------------------
        begin                : $TemplateBuildDate
        git sha              : $TemplateVCSFormat
        copyright            : (C) $TemplateYear by $TemplateAuthor
        email                : $TemplateEmail
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
from PyQt4.QtCore import QSettings, QTranslator, qVersion, QCoreApplication
import os.path


class ${TemplateClass}:
    """QGIS Plugin Implementation."""

    def __init__(self, iface):
        """Constructor.

        :param iface: An interface instance that will be passed to this class
            which provides the hook by which you can manipulate the QGIS
            application at run time.
        :type iface: QgsInterface
        """
        # Save reference to the QGIS interface
        self.iface = iface
        # initialize plugin directory
        self.plugin_dir = os.path.dirname(__file__)
        # initialize locale
        locale = QSettings().value('locale/userLocale')[0:2]
        locale_path = os.path.join(
            self.plugin_dir,
            'i18n',
            '${TemplateClass}_{}.qm'.format(locale))

        if os.path.exists(locale_path):
            self.translator = QTranslator()
            self.translator.load(locale_path)

            if qVersion() > '4.3.3':
                QCoreApplication.installTranslator(self.translator)

    # noinspection PyMethodMayBeStatic
    def tr(self, message):
        """Get the translation for a string using Qt translation API.

        We implement this ourselves since we do not inherit QObject.

        :param message: String for translation.
        :type message: str, QString

        :returns: Translated version of message.
        :rtype: QString
        """
        # noinspection PyTypeChecker,PyArgumentList,PyCallByClass
        return QCoreApplication.translate('${TemplateClass}', message)


    def initGui(self):
        """Create the menu entries and toolbar icons inside the QGIS GUI."""
        pass


    def unload(self):
        """Removes the plugin menu item and icon from QGIS GUI."""
        pass


    def run(self):
        """Run method that performs all the real work.

        Do something useful here - delete the line containing pass and
        substitute with your code.
        """
        pass
